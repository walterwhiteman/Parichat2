# .github/workflows/deploy-to-firebase.yml

name: Deploy Parichat2 to Firebase Hosting

on:
  push:
    branches:
      - main # This workflow triggers on pushes to the 'main' branch

  pull_request:
    branches:
      - main # This workflow triggers for pull requests opened against 'main'
    types: [opened, synchronize, reopened] # Runs when a PR is opened, updated, or reopened

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest # The type of virtual machine environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Action to clone your repository's code

      - name: Set up Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your Node.js version (adjust if needed, e.g., '18', '22')
          cache: 'npm' # Caches npm dependencies to speed up builds
          cache-dependency-path: 'package-lock.json' # Path to your package-lock.json

      - name: Install Dependencies
        run: npm install # Installs all packages listed in package.json

      - name: Build Project
        run: npm run build # Runs the 'build' script defined in your package.json (e.g., for React/Vite)

      # Step to deploy to Firebase Hosting (Live Channel) - runs ONLY when pushing directly to 'main'
      - name: Deploy to Firebase Hosting (Live)
        if: github.ref == 'refs/heads/main' # Condition: only run if the pushed branch is 'main'
        uses: FirebaseExtended/action-hosting-deploy@v0 # Official GitHub Action for Firebase Hosting
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}' # Provided by GitHub for authentication
          # This secret holds your Firebase Service Account JSON key
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PARIYASHWORLD }}'
          projectId: pariyashworld # Your Firebase Project ID
          channelId: live # Deploys to the primary live URL (your-project-id.web.app)
        env:
          # If your application's build process needs environment variables, list them here.
          # For client-side Firebase API keys, they are often not secret and can be in code.
          # Only add if `npm run build` needs secrets, e.g., for SSR or certain build tools.
          VITE_FIREBASE_API_KEY: '${{ secrets.VITE_FIREBASE_API_KEY }}' # Example if you needed to pass it securely

      # Step to deploy to Firebase Hosting (Preview Channel) - runs ONLY for Pull Requests
      - name: Deploy to Firebase Hosting (Preview)
        if: github.event_name == 'pull_request' # Condition: only run if the trigger is a Pull Request
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # This secret holds your Firebase Service Account JSON key
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PARIYASHWORLD }}'
          projectId: pariyashworld # Your Firebase Project ID
          channelId: preview # Deploys to a temporary preview URL for PRs
        env:
          VITE_FIREBASE_API_KEY: '${{ secrets.VITE_FIREBASE_API_KEY }}'
